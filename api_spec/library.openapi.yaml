openapi: 3.0.3
info:
  title: Library system
  version: 1.0.0
paths:
  /rented-books:
    get:
      summary: Get all rented books
      operationId: getRentedBooks
      responses:
        200:
          $ref: '#/components/responses/rentedBooksFetched'
  /rented-books/{rentedBookId}:
    delete:
      summary: Return a book
      operationId: returnABook
      parameters:
        - name: rentedBookId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: book returned
  /books:
    get:
      summary: Get all books in the library
      operationId: getBooks
      responses:
        200:
          $ref: '#/components/responses/booksFetched'
  /books/{bookId}:
    get:
      summary: Get book identified by `bookId`
      operationId: getBookById
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          $ref: '#/components/responses/bookFetched'
  /books/{bookId}/rent:
    post:
      summary: Rent a book
      operationId: rentBook
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          $ref: '#/components/responses/rentedBookFetched'
components:
  schemas:
    book:
      type: object
      description: book object
      properties:
        id:
          type: string
          format: uuid
          description: Unique book identifier
        title:
          type: string
          description: Book title
    rentedBook:
      type: object
      description: rented book object
      properties:
        id:
          type: string
          format: uuid
          description: Unique rented book identifier
        bookId:
          type: string
          format: uuid
          description: Book identifier
        dueDate:
          type: string
          format: date
          description: Rental due date
  responses:
    bookFetched:
      description: book fetched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/book'
    booksFetched:
      description: books fetched
      content:
        application/json:
          schema:
            type: object
            properties:
              items: 
                type: array
                items: 
                  $ref: '#/components/schemas/book'
    rentedBookFetched:
      description: rented book fetched
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/rentedBook"
    rentedBooksFetched:
      description: rented books fetched
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/components/schemas/rentedBook'
